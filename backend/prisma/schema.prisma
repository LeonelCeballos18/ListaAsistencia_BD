// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DB_URL")
}

model SemestreGrupo {
  id       Int      @id @default(autoincrement())
  semestre Int
  grupo    String   @db.VarChar(1)
  estudiantes Estudiante[]
  clases      Clase[]
}

model Estudiante {
  num_cuenta       Int          @id
  nombre           String       @db.VarChar(80)
  apellido         String       @db.VarChar(80)
  correo_ucol      String       @unique @db.VarChar(50)
  id_semestre_grupo Int?
  semestreGrupo    SemestreGrupo? @relation(fields: [id_semestre_grupo], references: [id])
  estudianteClases EstudianteClase[]
  asistencias      Asistencia[]
}

model Profesor {
  num_trabajador Int     @id
  nombre         String  @db.VarChar(80)
  apellido       String  @db.VarChar(80)
  correo_ucol    String  @unique @db.VarChar(50)
  clases         Clase[]
}

model Curso {
  id     Int     @id @default(autoincrement())
  nombre String  @db.VarChar(100)
  clases Clase[]
}

model Clase {
  id_clase          Int             @id @default(autoincrement())
  id_curso          Int?
  id_profesor       Int?
  id_semestre_grupo Int?
  dia_semana        DiaSemana
  hora_inicio       DateTime        @db.Time
  hora_fin          DateTime        @db.Time
  curso             Curso?          @relation(fields: [id_curso], references: [id])
  profesor          Profesor?       @relation(fields: [id_profesor], references: [num_trabajador])
  semestreGrupo     SemestreGrupo?  @relation(fields: [id_semestre_grupo], references: [id])
  estudianteClases  EstudianteClase[]
  asistencias       Asistencia[]
}

model EstudianteClase {
  id           Int       @id @default(autoincrement())
  id_clase     Int?
  id_estudiante Int?
  clase        Clase?    @relation(fields: [id_clase], references: [id_clase])
  estudiante   Estudiante? @relation(fields: [id_estudiante], references: [num_cuenta])
}

model Asistencia {
  id           Int       @id @default(autoincrement())
  id_clase     Int?
  id_estudiante Int?
  estado       Estado
  comentarios  String?   @db.VarChar(200)
  marca_tiempo DateTime  @default(now())
  clase        Clase?    @relation(fields: [id_clase], references: [id_clase])
  estudiante   Estudiante? @relation(fields: [id_estudiante], references: [num_cuenta])
}

model Usuario {
  id_usuario     Int     @id @default(autoincrement())
  nombre_usuario String  @unique @db.VarChar(50)
  contrasena     String  @db.VarChar(255)
  rol            Rol
}

enum DiaSemana {
  Lunes
  Martes
  Miercoles
  Jueves
  Viernes
}

enum Estado {
  Presente
  Ausente
  Retardo
  Justificado
}

enum Rol {
  profesor
  admin
}